{"version":3,"sources":["App.js","random.js","serviceWorker.js","GridPanels.js","ColorButton.js","ButtonContainer.js","GridContainer.js","index.js"],"names":["App","react_default","a","createElement","className","Link","to","Component","icons","type","color","friendly","limbs","dob","FormComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showCard","icon","setState","selectedCard","findByColors","selectValue","state","array","i","length","push","map","index","key","onClick","addValue","_this$state","select","document","getElementById","option","value","toLowerCase","text","limbValue","parseInt","colors","innerHTML","indexOf","add","forms","reset","handleChange","bind","assertThisInitialized","handleTypeChange","handleColorChange","toggleCheckbox","handleLimbsChange","handleDobChange","event","target","_this2","_this$state2","console","log","Fade_default","left","style","padding","id","onChange","toString","placeholder","min","max","Boolean","window","location","hostname","match","GridPanels","changeColor","active","newColor","colorSelection","backgroundColor","ColorButton","_this$props","buttonStyle","isActive","border","ButtonContainer","colorList","selected","activeColor","src_ColorButton","isSelected","GridContainer","o","colorSelect","renderButton","count","src_GridPanels","gridColumns","src_ButtonContainer","gridTemplateColumns","rows","routing","BrowserRouter","Route","path","component","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a9c2dfc9.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { Link } from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"Tabs\">\n          <Link className=\"h-tab\" to=\"/\">\n            Home\n          </Link>\n          <Link className=\"f-tab\" to=\"/form\">\n            Form Field\n          </Link>\n          <Link className=\"cg-tab\" to=\"/color-grid\">\n            Color Grid\n          </Link>\n        </div>\n        <div className=\"home-header\">Welcome to the React App!</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\nimport Fade from \"react-reveal/Fade\";\nimport \"./icons.css\";\n\nlet icons = [\n  {\n    type: \"monster\",\n    color: \"green\",\n    friendly: false,\n    limbs: 4,\n    dob: \"1999-02-13\"\n  },\n  {\n    type: \"dolphin\",\n    color: \"blue\",\n    friendly: true,\n    limbs: 4,\n    dob: \"1998-07-3\"\n  },\n  {\n    type: \"rabbit\",\n    color: \"blue\",\n    friendly: true,\n    limbs: 4,\n    dob: \"1999-02-11\"\n  },\n  {\n    type: \"ninja\",\n    color: \"blue\",\n    friendly: false,\n    limbs: 4,\n    dob: \"1950-01-25\"\n  },\n  {\n    type: \"octopus\",\n    color: \"purple\",\n    friendly: true,\n    limbs: 8,\n    dob: \"2006-05-07\"\n  },\n  {\n    type: \"cactus\",\n    color: \"blue\",\n    friendly: false,\n    limbs: 4,\n    dob: \"2003-04-13\"\n  },\n  {\n    type: \"snail\",\n    color: \"green\",\n    friendly: false,\n    limbs: 0,\n    dob: \"1995-11-19\"\n  },\n  {\n    type: \"penguin\",\n    color: \"purple\",\n    friendly: true,\n    limbs: 4,\n    dob: \"1998-11-13\"\n  },\n  {\n    type: \"bird\",\n    color: \"purple\",\n    friendly: true,\n    limbs: 2,\n    dob: \"1966-09-26\"\n  },\n  {\n    type: \"squirrel\",\n    color: \"blue\",\n    friendly: true,\n    limbs: 4,\n    dob: \"2009-08-23\"\n  },\n  {\n    type: \"girl\",\n    color: \"green\",\n    friendly: true,\n    limbs: 4,\n    dob: \"1903-3-03\"\n  }\n];\n\nclass FormComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectValue: props.value,\n      selectedCard: null,\n      type: \"\",\n      color: \"\",\n      friendly: \"Nope\",\n      limbs: \"\",\n      dob: \"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleTypeChange = this.handleTypeChange.bind(this);\n    this.handleColorChange = this.handleColorChange.bind(this);\n    this.toggleCheckbox = this.toggleCheckbox.bind(this);\n    this.handleLimbsChange = this.handleLimbsChange.bind(this);\n    this.handleDobChange = this.handleDobChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ selectValue: event.target.value });\n  }\n\n  handleTypeChange(event) {\n    this.setState({ type: event.target.value });\n  }\n\n  handleColorChange(event) {\n    this.setState({ color: event.target.value });\n  }\n\n  toggleCheckbox() {\n    this.setState({ friendly: \"Sure\" });\n  }\n\n  handleLimbsChange(event) {\n    this.setState({ limbs: event.target.value });\n  }\n\n  handleDobChange(event) {\n    this.setState({ dob: event.target.value });\n  }\n\n  showCard = icon => {\n    this.setState({ selectedCard: icon });\n  };\n\n  findByColors = () => {\n    const { selectValue } = this.state;\n    let array = [];\n    for (let i = 0; i < icons.length; i++) {\n      const icon = icons[i];\n      if (icon.color === selectValue) {\n        array.push({\n          type: icon.type,\n          color: icon.color,\n          friendly: icon.friendly,\n          limbs: icon.limbs,\n          dob: icon.dob\n        });\n      }\n    }\n\n    const buttons = array.map((icon, index) => {\n      return (\n        <button\n          className=\"icon-buttons\"\n          key={index}\n          onClick={() => this.showCard(icon)}\n        >\n          {icon.type}\n        </button>\n      );\n    });\n\n    return buttons;\n  };\n\n  addValue = () => {\n    const { type, color, friendly, limbs, dob } = this.state;\n    const select = document.getElementById(\"select\");\n    const option = document.createElement(\"option\");\n    option.value = color.toLowerCase();\n    option.text = color;\n    const limbValue = parseInt(limbs, 10);\n    const colors = icons.map(icon => icon.color);\n\n    if (type === \"\") {\n      document.getElementById(\"type-error\").innerHTML = \"Type is required!\";\n      return false;\n    } else if (type !== \"\") {\n      document.getElementById(\"type-error\").innerHTML = \"\";\n    }\n\n    if (color === \"Select Option...\") {\n      document.getElementById(\"color-error\").innerHTML = \"Color is required!\";\n      return false;\n    } else if (color !== \"\") {\n      document.getElementById(\"color-error\").innerHTML = \"\";\n    }\n\n    if (limbs === \"\") {\n      document.getElementById(\"limb-error\").innerHTML = \"Limbs is required!\";\n      return false;\n    } else if (limbs !== \"\") {\n      document.getElementById(\"limb-error\").innerHTML = \"\";\n    }\n\n    if (dob === \"\") {\n      document.getElementById(\"date-error\").innerHTML =\n        \"Date of Birth is required!\";\n      return false;\n    } else if (dob !== \"\") {\n      document.getElementById(\"date-error\").innerHTML = \"\";\n    }\n\n    if (colors.indexOf(color.toLowerCase()) === -1) {\n      select.add(option);\n    }\n\n    icons.push({\n      type: type,\n      color: color.toLowerCase(),\n      friendly: friendly,\n      limbs: limbValue,\n      dob: dob\n    });\n\n    this.setState({\n      type: \"\",\n      color: \"\",\n      limbs: \"\",\n      dob: \"\"\n    });\n\n    document.forms[\"myForm\"].reset();\n  };\n\n  render() {\n    const { selectedCard, selectValue, friendly } = this.state;\n    console.log(\"selectedCard\", selectedCard);\n    console.log(\"selectValue\", selectValue);\n    return (\n      <div className=\"Body\">\n        <Fade left>\n          <div className=\"Headline\" style={{ padding: \"1rem\" }}>\n            Filter The Icon Card Here!!\n          </div>\n        </Fade>\n        <div className=\"selectBox\">\n          <select id=\"select\" className=\"select\" onChange={this.handleChange}>\n            <option>Select Color to Filter By</option>\n            <option value=\"blue\">Blue</option>\n            <option value=\"green\">Green</option>\n            <option value=\"purple\">Purple</option>\n          </select>\n        </div>\n        <div className=\"yo\">{this.findByColors()}</div>\n        {selectedCard && selectValue !== \"Select Color to Filter By\" && (\n          <div id=\"card\" className=\"card\">\n            <p>Type: {selectedCard.type}</p>\n            <p>Color: {selectedCard.color}</p>\n            <p>Friendly: {selectedCard.friendly.toString()}</p>\n            <p>Number of Limbs: {selectedCard.limbs}</p>\n            <p>Date of Birth: {selectedCard.dob}</p>\n          </div>\n        )}\n        <div className=\"icon-title\">Add a new icon character below!</div>\n        <fieldset className=\"feild-set\">\n          <form id=\"myForm\" className=\"myForm\">\n            <div className=\"form-titles\">Type:</div>\n            <input\n              type=\"text\"\n              id=\"type\"\n              placeholder=\"Icon Type...\"\n              onChange={this.handleTypeChange}\n            />\n            <p id=\"type-error\" className=\"error\" />\n            <div className=\"form-titles\">Color:</div>\n            <select\n              id=\"color\"\n              className=\"select-style\"\n              onChange={this.handleColorChange}\n            >\n              <option>Select Option...</option>\n              <option value=\"Blue\">Blue</option>\n              <option value=\"Green\">Green</option>\n              <option value=\"Purple\">Purple</option>\n              <option value=\"Orange\">Orange</option>\n              <option value=\"Yellow\">Yellow</option>\n              <option value=\"Red\">Red</option>\n              <option value=\"Pink\">Pink</option>\n              <option value=\"Brown\">Brown</option>\n              <option value=\"Black\">Black</option>\n              <option value=\"White\">White</option>\n            </select>\n            <p id=\"color-error\" className=\"error\" />\n            <div className=\"form-titles\">Friendly?:</div>\n            <input\n              type=\"checkbox\"\n              value={friendly}\n              onChange={this.toggleCheckbox}\n            />\n            <p id=\"radio-error\" className=\"error\" />\n            <div className=\"form-titles\">Limbs:</div>\n            <input\n              type=\"number\"\n              min=\"0\"\n              id=\"limbs\"\n              placeholder=\"Number of Limbs...\"\n              onChange={this.handleLimbsChange}\n            />\n            <p id=\"limb-error\" className=\"error\" />\n            <div className=\"form-titles\">Date of Birth:</div>\n            <input\n              type=\"date\"\n              max=\"2019-02-20\"\n              id=\"dob\"\n              onChange={this.handleDobChange}\n            />\n            <p id=\"date-error\" className=\"error\" />\n            <button\n              className=\"save-button\"\n              type=\"button\"\n              onClick={() => this.addValue()}\n            >\n              Sumbit\n            </button>\n          </form>\n        </fieldset>\n      </div>\n    );\n  }\n}\n\nexport default FormComponent;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit http://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See http://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./grid.css\";\n\nclass GridPanels extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      active: false,\n      text: props.text\n    };\n    this.changeColor = this.changeColor.bind(this);\n  }\n\n  changeColor = () => {\n    const { active } = this.state;\n    this.setState({ active: !active });\n    if (this.props.newColor !== this.state.color) {\n      this.setState({ color: this.props.newColor });\n      if (active) {\n        this.setState({ active: true });\n      }\n    }\n  };\n\n  render() {\n    const { active, text, color } = this.state;\n\n    const colorSelection = !active ? \"white\" : color;\n\n    return (\n      <button\n        className=\"Item\"\n        style={{ backgroundColor: colorSelection }}\n        onClick={() => this.changeColor()}\n      >\n        {text}\n      </button>\n    );\n  }\n}\n\nexport default GridPanels;\n","import React, { Component } from \"react\";\nimport \"./grid.css\";\n\nclass ColorButton extends Component {\n  render() {\n    const { color, onClick, isActive } = this.props;\n\n    const styled = { backgroundColor: color, border: \"solid black\" };\n    const nonStyled = { backgroundColor: color };\n    const buttonStyle = isActive ? styled : nonStyled;\n\n    return (\n      <button\n        className=\"color-buttons\"\n        style={buttonStyle}\n        onClick={() => onClick(color)}\n      />\n    );\n  }\n}\n\nexport default ColorButton;\n","import React, { Component } from \"react\";\nimport ColorButton from \"./ColorButton.js\";\n\nclass ButtonContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      colorList: [\n        \"teal\",\n        \"purple\",\n        \"yellow\",\n        \"red\",\n        \"green\",\n        \"silver\",\n        \"gold\",\n        \"black\",\n        \"blue\",\n        \"pink\",\n        \"brown\",\n        \"steelblue\"\n      ],\n      selected: false\n    };\n  }\n\n  isSelected() {\n    this.setState({ selected: true });\n  }\n\n  render() {\n    const { colorList } = this.state;\n    const { changeColor, activeColor } = this.props;\n\n    return (\n      <div>\n        {colorList.map((color, index) => {\n          let isActive = activeColor === color;\n          return (\n            <ColorButton\n              key={index}\n              color={color}\n              isActive={isActive}\n              onClick={color => changeColor(color, this.isSelected)}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default ButtonContainer;\n","import React, { Component } from \"react\";\nimport GridPanels from \"./GridPanels.js\";\nimport ButtonContainer from \"./ButtonContainer\";\nimport \"./grid.css\";\n\nclass GridContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      color: null\n    };\n    this.changeColor = this.changeColor.bind(this);\n  }\n  changeColor = o => {\n    this.setState({ color: o });\n  };\n\n  colorSelect = color => {\n    return (\n      <button\n        className=\"color-item\"\n        style={{ backgroundColor: color }}\n        onClick={() => this.changeColor(color)}\n      />\n    );\n  };\n\n  renderButton = (count, newColor) => {\n    const array = [];\n    for (let index = 0; index < count; index++) {\n      array.push(<GridPanels key={index} text={index} newColor={newColor} />);\n    }\n    return array;\n  };\n\n  render() {\n    const { color } = this.state;\n    console.log(\"color\", color);\n    const rows = 12;\n    const columns = 12;\n    const count = rows * columns;\n\n    let gridColumns = \"\";\n    for (let index = 0; index < columns; index++) {\n      gridColumns += \" auto\";\n    }\n\n    return (\n      <div>\n        <div className=\"color-buttons-container\">\n          <ButtonContainer changeColor={this.changeColor} activeColor={color} />\n        </div>\n        <div className=\"container\" style={{ gridTemplateColumns: gridColumns }}>\n          {this.renderButton(count, color)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GridContainer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport FormComponent from \"./random.js\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport GridContainer from \"./GridContainer\";\n\nconst routing = (\n  <Router>\n    <div>\n      <Route path=\"/\" component={App} />\n      <Route path=\"/form\" component={FormComponent} />\n      <Route path=\"/color-grid\" component={GridContainer} />\n    </div>\n  </Router>\n);\n\nReactDOM.render(routing, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}